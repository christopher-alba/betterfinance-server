type Query {
  me: User
}

type Mutation {
  register(username: String!, password: String!): User
  login(username: String!, password: String!): User
}

type User {
  username: String!
  password: String!
  token: String!
}

type Profile {
  email: String!
  incomeIDs: [String]!
  expensesIDs: [String]!
  goalsIDs: [String]!
  userID: String!
}

type Income {
  name: String!
  amount: Float!
  frequency: Frequency!
  active: Boolean!
  profileID: ID!
}

type Expense {
  name: String!
  amount: Float!
  frequency: Frequency!
  active: Boolean!
  profileID: ID!
}

type Goal {
  name: String!
  targetAmount: Float!
  completionDate: String!
  contributionAmount: Float!
  contributionFrequency: Frequency!
  active: Boolean!
  profileID: ID!
}

enum Frequency {
  Daily
  Weekly
  Monthly
  Yearly
}
